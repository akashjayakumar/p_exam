# -*- coding: utf-8 -*-
"""Copy of RL 2 Tic.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uVtLrAoYoT7pAWaVK21eFPl1z__q96KF
"""

import random

def printBoard(board):
    print(' ' + board[7] + ' | ' + board[8] + ' | ' + board[9])
    print('-----------')
    print(' ' + board[4] + ' | ' + board[5] + ' | ' + board[6])
    print('-----------')
    print(' ' + board[1] + ' | ' + board[2] + ' | ' + board[3])

def inputPlayerLetter():
    letter = ''
    while not (letter == 'X' or letter == 'O'):
        print('Do you want to be X or O?')
        letter = input().upper()
    if letter == 'X':
        return ['X', 'O']
    else:
        return ['O', 'X']

def whoGoesFirst():
    if random.randint(0, 1) == 0:
        return 'computer'
    else:
        return 'player'

def playAgain():
    print('Do you want to play again? (yes or no)')
    return input().lower().startswith('y')

def makeMove(board, letter, move):
    board[move] = letter

def isWinner(bo, le):
    return ((bo[7] == le and bo[8] == le and bo[9] == le) or
            (bo[4] == le and bo[5] == le and bo[6] == le) or
            (bo[1] == le and bo[2] == le and bo[3] == le) or
            (bo[7] == le and bo[4] == le and bo[1] == le) or
            (bo[8] == le and bo[5] == le and bo[2] == le) or
            (bo[9] == le and bo[6] == le and bo[3] == le))

def getBoardCopy(board):
    return board[:]

def isSpaceFree(board, move):
    return board[move] == ' '

def chooseRandomMoveFromList(board, moves):
    possibleMoves = []
    for i in moves:
        if isSpaceFree(board, i):
            possibleMoves.append(i)
    if len(possibleMoves) != 0:
        return random.choice(possibleMoves)
    else:
        return None

def getComputerMove(board, computerLetter):
    for i in range(1, 10):
        copy = getBoardCopy(board)
        if isSpaceFree(copy, i):
            makeMove(copy, computerLetter, i)
            if isWinner(copy, computerLetter):
                return i

    for i in range(1, 10):
        copy = getBoardCopy(board)
        if isSpaceFree(copy, i):
            makeMove(copy, 'X' if computerLetter == 'O' else 'O', i)
            if isWinner(copy, 'X' if computerLetter == 'O' else 'O'):
                return i

    move = chooseRandomMoveFromList(board, [1, 3, 7, 9])
    if move is not None:
        return move

    if isSpaceFree(board, 5):
        return 5

    return chooseRandomMoveFromList(board, [2, 4, 6, 8])

def playGame(playerLetter, computerLetter):
    print('Welcome to Tic Tac Toe!')
    theBoard = [' '] * 10
    gameIsPlaying = True
    turn = whoGoesFirst()
    print('The ' + turn + ' will go first.')
    while gameIsPlaying:
        if turn == 'player':
            printBoard(theBoard)
            move = input('What is your next move? (1-9) ')
            move = int(move)
            if isSpaceFree(theBoard, move):
                makeMove(theBoard, playerLetter, move)

                if isWinner(theBoard, playerLetter):
                    printBoard(theBoard)
                    print('Hooray! You have won the game!')
                    gameIsPlaying = False
                else:
                    if ' ' not in theBoard[1:]:
                        printBoard(theBoard)
                        print('The game is a tie!')
                        break
                    else:
                        turn = 'computer'
        else:
            move = getComputerMove(theBoard, computerLetter)
            makeMove(theBoard, computerLetter, move)

            if isWinner(theBoard, computerLetter):
                printBoard(theBoard)
                print('The computer has beaten you! You lose.')
                gameIsPlaying = False
            else:
                if ' ' not in theBoard[1:]:
                    printBoard(theBoard)
                    print('The game is a tie!')
                    break
                else:
                    turn = 'player'

playerLetter, computerLetter = inputPlayerLetter()
while True:
    playGame(playerLetter, computerLetter)
    if not playAgain():
        break