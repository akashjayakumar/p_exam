# -*- coding: utf-8 -*-
"""DOAIP(4).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tptx7ZuxdBdPaE4JI1_5wZpNdyk907lZ
"""

import pandas as pd
import numpy as np
from sklearn.cluster import KMeans

# Assuming 'data.csv' is your dataset
data = pd.read_csv('/content/performance.csv')

# Assuming the dataset has columns which representing marks
X = data[['math score', 'reading score', 'writing score']]

# Assuming you want to find the optimal K between 2 and 10
inertia = []
for k in range(2, 11):
    kmeans = KMeans(n_clusters=k, random_state=42)
    kmeans.fit(X)
    inertia.append(kmeans.inertia_)

# Assuming optimal K is found to be 'optimal_k'
optimal_k = 3  # Replace this with your calculated optimal K
kmeans = KMeans(n_clusters=optimal_k, random_state=42)
kmeans.fit(X)

# Get cluster assignments for each student
cluster_labels = kmeans.labels_

# Get centroids of each cluster
centroids = kmeans.cluster_centers_

# Print a subset of the results
print("Cluster Labels (first 10 elements):", cluster_labels[:10])
print("\nCentroids (rounded to 2 decimal places):")
print(np.round(centroids, 2))